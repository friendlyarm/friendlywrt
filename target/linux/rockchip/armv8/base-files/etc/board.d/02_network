
. /lib/functions/uci-defaults.sh
. /lib/functions/system.sh

rockchip_setup_interfaces()
{
	local board="$1"
	local boardname="${board##*,}"

	case "$boardname" in
	nanopi-r2s | \
	nanopi-r2c | \
	nanopi-r4s | \
	nanopi-r2 | \
	nanopi-r5c | \
	nanopi-r6c | \
	nanopc-t6 | \
	nanopi-r3s)
		ucidef_set_interface_wan 'eth0'
		ucidef_set_interface "lan" device  "eth1" protocol "static" ipaddr "192.168.2.1"
		;;
	nanopi-neo3 | \
	nanopc-t4 | \
	nanopi-m4 | \
	nanopi-m6 | \
	nanopi-zero2 | \
	nanopi-neo4 | \
	som-rk3399 | cm3588)
		ucidef_set_interface_wan 'eth0'
		ucidef_set_interface "lan" device "wlan0" protocol "static" ipaddr "192.168.2.1"
		;;
	nanopi-r5s)
		ucidef_set_interface_wan 'eth0'
		ucidef_set_interface "lan" device  "eth1 eth2" protocol "static" ipaddr "192.168.2.1"
		;;
	nanopi-r6s)
		ucidef_set_interface_wan 'eth2'
		ucidef_set_interface "lan" device  "eth1 eth0" protocol "static" ipaddr "192.168.2.1"
		;;
	*)
		ucidef_set_interface_lan 'eth0'
		;;
	esac
}

generate_mac_from_mmc_cid()
{
	local mmc_dev=$1

	local sd_hash=$(sha256sum /sys/class/block/$mmc_dev/device/cid)
	local mac_base=$(macaddr_canonicalize "$(echo "${sd_hash}" | dd bs=1 count=12 2>/dev/null)")
	echo "$(macaddr_unsetbit_mc "$(macaddr_setbit_la "${mac_base}")")"
}

nanopi_get_mac()
{
	local interface=$1
	local eeprom_path="/sys/bus/i2c/devices/$2/eeprom"
	local address

	if [ -f "$eeprom_path" ]; then
		address=$(get_mac_binary "$eeprom_path" 0xfa)
		if [ "$interface" = "lan" ]; then
			address=$(macaddr_setbit_la "$address")
		fi
	else
		address=$(generate_mac_from_mmc_cid ${root_dev})
		if [ "$interface" = "lan" ]; then
			address=$(macaddr_add "$address" 1)
		fi
	fi

	echo "$address"
}

rockchip_setup_macs()
{
	local board="$1"
	local lan_mac=""
	local wan_mac=""
	local label_mac=""

	# local vendor=$(echo ${board}|cut -d ',' -f1)	
	local boardname="${board##*,}"

	case "$boardname" in
	nanopi-r4s)
		wan_mac=$(nanopi_get_mac wan 2-0051)
		lan_mac=$(nanopi_get_mac lan 2-0051)
		;;
	nanopi-r6s|nanopi-r6c|nanopc-t6)
		wan_mac=$(nanopi_get_mac wan 6-0053)
		lan_mac=$(nanopi_get_mac lan 6-0053)
		;;
	*)
		if [ -f /sys/class/block/${root_dev}/device/cid ]; then
			wan_mac=$(generate_mac_from_mmc_cid "$root_dev")
			lan_mac=$(macaddr_add "$wan_mac" 1)
		fi
		;;
	esac

	[ -n "$lan_mac" ] && ucidef_set_interface_macaddr "lan" $lan_mac
	[ -n "$wan_mac" ] && ucidef_set_interface_macaddr "wan" $wan_mac
	[ -n "$label_mac" ] && ucidef_set_label_macaddr $label_mac
}

function find_root_dev() {
	local pname=""
	set -- $(cat /proc/cmdline)
	for x in "$@"; do
	    case "$x" in
		root=*)
		pname="${x#root=}"
		;;
		esac
	done

	if [ ! -z $pname ]; then
		for d in `fdisk -l 2>/dev/null | grep "^Disk " | cut -d":" -f1 | cut -f2`
		do
			if [ `fdisk -l $d 2>/dev/null | grep -c "${pname}"` -gt 0 ]
			then
				echo $d
			fi
		done
	fi
}

board_config_update
board=$(board_name)
root_dev=$(find_root_dev)
if [ ! -z $root_dev ]; then
	root_dev=$(basename $root_dev)
else
	printf "root_dev is empty, why?, please check /etc/board.d/02_network.\n" > /tmp/config_generate_error.txt
fi
rockchip_setup_interfaces $board
rockchip_setup_macs $board
board_config_flush

exit 0
